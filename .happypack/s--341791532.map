{"version":3,"sources":["public/src/js_components/react-router/modules/RouteUtils.js"],"names":["isReactChildren","createRouteFromReactElement","createRoutesFromReactChildren","createRoutes","isValidChild","object","isValidElement","Array","isArray","every","createRoute","defaultProps","props","element","type","route","children","childRoutes","length","parentRoute","routes","Children","forEach","push"],"mappings":";;;;;;QAMgBA,e,GAAAA,e;QAQAC,2B,GAAAA,2B;QAiCAC,6B,GAAAA,6B;QAwBAC,Y,GAAAA,Y;;AAvEhB;;;;;;AAEA,SAASC,YAAT,CAAsBC,MAAtB,EAA8B;AAC5B,SAAOA,UAAU,IAAV,IAAkB,gBAAMC,cAAN,CAAqBD,MAArB,CAAzB;AACD;;AAEM,SAASL,eAAT,CAAyBK,MAAzB,EAAiC;AACtC,SAAOD,aAAaC,MAAb,KAAyBE,MAAMC,OAAN,CAAcH,MAAd,KAAyBA,OAAOI,KAAP,CAAaL,YAAb,CAAzD;AACD;;AAED,SAASM,WAAT,CAAqBC,YAArB,EAAmCC,KAAnC,EAA0C;AACxC,sBAAYD,YAAZ,EAA6BC,KAA7B;AACD;;AAEM,SAASX,2BAAT,CAAqCY,OAArC,EAA8C;AACnD,MAAMC,OAAOD,QAAQC,IAArB;AACA,MAAMC,QAAQL,YAAYI,KAAKH,YAAjB,EAA+BE,QAAQD,KAAvC,CAAd;;AAEA,MAAIG,MAAMC,QAAV,EAAoB;AAClB,QAAMC,cAAcf,8BAA8Ba,MAAMC,QAApC,EAA8CD,KAA9C,CAApB;;AAEA,QAAIE,YAAYC,MAAhB,EACEH,MAAME,WAAN,GAAoBA,WAApB;;AAEF,WAAOF,MAAMC,QAAb;AACD;;AAED,SAAOD,KAAP;AACD;;AAED;;;;;;;;;;;;;;;;;AAiBO,SAASb,6BAAT,CAAuCc,QAAvC,EAAiDG,WAAjD,EAA8D;AACnE,MAAMC,SAAS,EAAf;;AAEA,kBAAMC,QAAN,CAAeC,OAAf,CAAuBN,QAAvB,EAAiC,UAAUH,OAAV,EAAmB;AAClD,QAAI,gBAAMP,cAAN,CAAqBO,OAArB,CAAJ,EAAmC;AACjC;AACA,UAAIA,QAAQC,IAAR,CAAab,2BAAjB,EAA8C;AAC5C,YAAMc,QAAQF,QAAQC,IAAR,CAAab,2BAAb,CAAyCY,OAAzC,EAAkDM,WAAlD,CAAd;;AAEA,YAAIJ,KAAJ,EACEK,OAAOG,IAAP,CAAYR,KAAZ;AACH,OALD,MAKO;AACLK,eAAOG,IAAP,CAAYtB,4BAA4BY,OAA5B,CAAZ;AACD;AACF;AACF,GAZD;;AAcA,SAAOO,MAAP;AACD;;AAED;;;;AAIO,SAASjB,YAAT,CAAsBiB,MAAtB,EAA8B;AACnC,MAAIpB,gBAAgBoB,MAAhB,CAAJ,EAA6B;AAC3BA,aAASlB,8BAA8BkB,MAA9B,CAAT;AACD,GAFD,MAEO,IAAIA,UAAU,CAACb,MAAMC,OAAN,CAAcY,MAAd,CAAf,EAAsC;AAC3CA,aAAS,CAAEA,MAAF,CAAT;AACD;;AAED,SAAOA,MAAP;AACD","file":"RouteUtils.js","sourceRoot":"/Users/creator/workspace/furuida","sourcesContent":["import React from 'react'\n\nfunction isValidChild(object) {\n  return object == null || React.isValidElement(object)\n}\n\nexport function isReactChildren(object) {\n  return isValidChild(object) || (Array.isArray(object) && object.every(isValidChild))\n}\n\nfunction createRoute(defaultProps, props) {\n  return { ...defaultProps, ...props }\n}\n\nexport function createRouteFromReactElement(element) {\n  const type = element.type\n  const route = createRoute(type.defaultProps, element.props)\n\n  if (route.children) {\n    const childRoutes = createRoutesFromReactChildren(route.children, route)\n\n    if (childRoutes.length)\n      route.childRoutes = childRoutes\n\n    delete route.children\n  }\n\n  return route\n}\n\n/**\n * Creates and returns a routes object from the given ReactChildren. JSX\n * provides a convenient way to visualize how routes in the hierarchy are\n * nested.\n *\n *   import { Route, createRoutesFromReactChildren } from 'react-router'\n *\n *   const routes = createRoutesFromReactChildren(\n *     <Route component={App}>\n *       <Route path=\"home\" component={Dashboard}/>\n *       <Route path=\"news\" component={NewsFeed}/>\n *     </Route>\n *   )\n *\n * Note: This method is automatically used when you provide <Route> children\n * to a <Router> component.\n */\nexport function createRoutesFromReactChildren(children, parentRoute) {\n  const routes = []\n\n  React.Children.forEach(children, function (element) {\n    if (React.isValidElement(element)) {\n      // Component classes may have a static create* method.\n      if (element.type.createRouteFromReactElement) {\n        const route = element.type.createRouteFromReactElement(element, parentRoute)\n\n        if (route)\n          routes.push(route)\n      } else {\n        routes.push(createRouteFromReactElement(element))\n      }\n    }\n  })\n\n  return routes\n}\n\n/**\n * Creates and returns an array of routes from the given object which\n * may be a JSX route, a plain object route, or an array of either.\n */\nexport function createRoutes(routes) {\n  if (isReactChildren(routes)) {\n    routes = createRoutesFromReactChildren(routes)\n  } else if (routes && !Array.isArray(routes)) {\n    routes = [ routes ]\n  }\n\n  return routes\n}\n"]}