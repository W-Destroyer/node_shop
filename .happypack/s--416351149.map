{"version":3,"sources":["node_modules/dom-align/lib/getElFuturePos.js"],"names":["Object","defineProperty","exports","value","_getAlignOffset","require","_getAlignOffset2","_interopRequireDefault","obj","__esModule","getElFuturePos","elRegion","refNodeRegion","points","offset","targetOffset","xy","diff","p1","p2","left","top","module"],"mappings":"AAAA;;AAEAA,OAAOC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,SAAO;AADoC,CAA7C;;AAIA,IAAIC,kBAAkBC,QAAQ,kBAAR,CAAtB;;AAEA,IAAIC,mBAAmBC,uBAAuBH,eAAvB,CAAvB;;AAEA,SAASG,sBAAT,CAAgCC,GAAhC,EAAqC;AAAE,SAAOA,OAAOA,IAAIC,UAAX,GAAwBD,GAAxB,GAA8B,EAAE,WAAWA,GAAb,EAArC;AAA0D;;AAEjG,SAASE,cAAT,CAAwBC,QAAxB,EAAkCC,aAAlC,EAAiDC,MAAjD,EAAyDC,MAAzD,EAAiEC,YAAjE,EAA+E;AAC7E,MAAIC,KAAK,KAAK,CAAd;AACA,MAAIC,OAAO,KAAK,CAAhB;AACA,MAAIC,KAAK,KAAK,CAAd;AACA,MAAIC,KAAK,KAAK,CAAd;;AAEAH,OAAK;AACHI,UAAMT,SAASS,IADZ;AAEHC,SAAKV,SAASU;AAFX,GAAL;;AAKAH,OAAK,CAAC,GAAGZ,iBAAiB,SAAjB,CAAJ,EAAiCM,aAAjC,EAAgDC,OAAO,CAAP,CAAhD,CAAL;AACAM,OAAK,CAAC,GAAGb,iBAAiB,SAAjB,CAAJ,EAAiCK,QAAjC,EAA2CE,OAAO,CAAP,CAA3C,CAAL;;AAEAI,SAAO,CAACE,GAAGC,IAAH,GAAUF,GAAGE,IAAd,EAAoBD,GAAGE,GAAH,GAASH,GAAGG,GAAhC,CAAP;;AAEA,SAAO;AACLD,UAAMJ,GAAGI,IAAH,GAAUH,KAAK,CAAL,CAAV,GAAoBH,OAAO,CAAP,CAApB,GAAgCC,aAAa,CAAb,CADjC;AAELM,SAAKL,GAAGK,GAAH,GAASJ,KAAK,CAAL,CAAT,GAAmBH,OAAO,CAAP,CAAnB,GAA+BC,aAAa,CAAb;AAF/B,GAAP;AAID;;AAEDb,QAAQ,SAAR,IAAqBQ,cAArB;AACAY,OAAOpB,OAAP,GAAiBA,QAAQ,SAAR,CAAjB","file":"getElFuturePos.js","sourceRoot":"/Users/creator/workspace/furuida","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _getAlignOffset = require('./getAlignOffset');\n\nvar _getAlignOffset2 = _interopRequireDefault(_getAlignOffset);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction getElFuturePos(elRegion, refNodeRegion, points, offset, targetOffset) {\n  var xy = void 0;\n  var diff = void 0;\n  var p1 = void 0;\n  var p2 = void 0;\n\n  xy = {\n    left: elRegion.left,\n    top: elRegion.top\n  };\n\n  p1 = (0, _getAlignOffset2[\"default\"])(refNodeRegion, points[1]);\n  p2 = (0, _getAlignOffset2[\"default\"])(elRegion, points[0]);\n\n  diff = [p2.left - p1.left, p2.top - p1.top];\n\n  return {\n    left: xy.left - diff[0] + offset[0] - targetOffset[0],\n    top: xy.top - diff[1] + offset[1] - targetOffset[1]\n  };\n}\n\nexports[\"default\"] = getElFuturePos;\nmodule.exports = exports['default'];"]}