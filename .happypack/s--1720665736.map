{"version":3,"sources":["node_modules/history/lib/DOMUtils.js"],"names":["exports","__esModule","addEventListener","node","event","listener","attachEvent","removeEventListener","detachEvent","supportsHistory","ua","window","navigator","userAgent","indexOf","history","supportsGoWithoutReloadUsingHash","supportsPopstateOnHashchange","isExtraneousPopstateEvent","state","undefined"],"mappings":"AAAA;;AAEAA,QAAQC,UAAR,GAAqB,IAArB;AACA,IAAIC,mBAAmBF,QAAQE,gBAAR,GAA2B,SAASA,gBAAT,CAA0BC,IAA1B,EAAgCC,KAAhC,EAAuCC,QAAvC,EAAiD;AACjG,SAAOF,KAAKD,gBAAL,GAAwBC,KAAKD,gBAAL,CAAsBE,KAAtB,EAA6BC,QAA7B,EAAuC,KAAvC,CAAxB,GAAwEF,KAAKG,WAAL,CAAiB,OAAOF,KAAxB,EAA+BC,QAA/B,CAA/E;AACD,CAFD;;AAIA,IAAIE,sBAAsBP,QAAQO,mBAAR,GAA8B,SAASA,mBAAT,CAA6BJ,IAA7B,EAAmCC,KAAnC,EAA0CC,QAA1C,EAAoD;AAC1G,SAAOF,KAAKI,mBAAL,GAA2BJ,KAAKI,mBAAL,CAAyBH,KAAzB,EAAgCC,QAAhC,EAA0C,KAA1C,CAA3B,GAA8EF,KAAKK,WAAL,CAAiB,OAAOJ,KAAxB,EAA+BC,QAA/B,CAArF;AACD,CAFD;;AAIA;;;;;;;AAOA,IAAII,kBAAkBT,QAAQS,eAAR,GAA0B,SAASA,eAAT,GAA2B;AACzE,MAAIC,KAAKC,OAAOC,SAAP,CAAiBC,SAA1B;;AAEA,MAAI,CAACH,GAAGI,OAAH,CAAW,YAAX,MAA6B,CAAC,CAA9B,IAAmCJ,GAAGI,OAAH,CAAW,aAAX,MAA8B,CAAC,CAAnE,KAAyEJ,GAAGI,OAAH,CAAW,eAAX,MAAgC,CAAC,CAA1G,IAA+GJ,GAAGI,OAAH,CAAW,QAAX,MAAyB,CAAC,CAAzI,IAA8IJ,GAAGI,OAAH,CAAW,eAAX,MAAgC,CAAC,CAAnL,EAAsL,OAAO,KAAP;;AAEtL,SAAOH,OAAOI,OAAP,IAAkB,eAAeJ,OAAOI,OAA/C;AACD,CAND;;AAQA;;;AAGA,IAAIC,mCAAmChB,QAAQgB,gCAAR,GAA2C,SAASA,gCAAT,GAA4C;AAC5H,SAAOL,OAAOC,SAAP,CAAiBC,SAAjB,CAA2BC,OAA3B,CAAmC,SAAnC,MAAkD,CAAC,CAA1D;AACD,CAFD;;AAIA;;;;AAIA,IAAIG,+BAA+BjB,QAAQiB,4BAAR,GAAuC,SAASA,4BAAT,GAAwC;AAChH,SAAON,OAAOC,SAAP,CAAiBC,SAAjB,CAA2BC,OAA3B,CAAmC,SAAnC,MAAkD,CAAC,CAA1D;AACD,CAFD;;AAIA;;;;;AAKA,IAAII,4BAA4BlB,QAAQkB,yBAAR,GAAoC,SAASA,yBAAT,CAAmCd,KAAnC,EAA0C;AAC5G,SAAOA,MAAMe,KAAN,KAAgBC,SAAhB,IAA6BR,UAAUC,SAAV,CAAoBC,OAApB,CAA4B,OAA5B,MAAyC,CAAC,CAA9E;AACD,CAFD","file":"DOMUtils.js","sourceRoot":"/Users/creator/workspace/furuida","sourcesContent":["'use strict';\n\nexports.__esModule = true;\nvar addEventListener = exports.addEventListener = function addEventListener(node, event, listener) {\n  return node.addEventListener ? node.addEventListener(event, listener, false) : node.attachEvent('on' + event, listener);\n};\n\nvar removeEventListener = exports.removeEventListener = function removeEventListener(node, event, listener) {\n  return node.removeEventListener ? node.removeEventListener(event, listener, false) : node.detachEvent('on' + event, listener);\n};\n\n/**\n * Returns true if the HTML5 history API is supported. Taken from Modernizr.\n *\n * https://github.com/Modernizr/Modernizr/blob/master/LICENSE\n * https://github.com/Modernizr/Modernizr/blob/master/feature-detects/history.js\n * changed to avoid false negatives for Windows Phones: https://github.com/reactjs/react-router/issues/586\n */\nvar supportsHistory = exports.supportsHistory = function supportsHistory() {\n  var ua = window.navigator.userAgent;\n\n  if ((ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) && ua.indexOf('Mobile Safari') !== -1 && ua.indexOf('Chrome') === -1 && ua.indexOf('Windows Phone') === -1) return false;\n\n  return window.history && 'pushState' in window.history;\n};\n\n/**\n * Returns false if using go(n) with hash history causes a full page reload.\n */\nvar supportsGoWithoutReloadUsingHash = exports.supportsGoWithoutReloadUsingHash = function supportsGoWithoutReloadUsingHash() {\n  return window.navigator.userAgent.indexOf('Firefox') === -1;\n};\n\n/**\n * Returns true if browser fires popstate on hash change.\n * IE10 and IE11 do not.\n */\nvar supportsPopstateOnHashchange = exports.supportsPopstateOnHashchange = function supportsPopstateOnHashchange() {\n  return window.navigator.userAgent.indexOf('Trident') === -1;\n};\n\n/**\n * Returns true if a given popstate event is an extraneous WebKit event.\n * Accounts for the fact that Chrome on iOS fires real popstate events\n * containing undefined state when pressing the back button.\n */\nvar isExtraneousPopstateEvent = exports.isExtraneousPopstateEvent = function isExtraneousPopstateEvent(event) {\n  return event.state === undefined && navigator.userAgent.indexOf('CriOS') === -1;\n};"]}