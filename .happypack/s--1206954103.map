{"version":3,"sources":["public/src/js/redux/reducer.jsx"],"names":["SHOW_ALL","visibilityFilter","state","action","type","filter","todos","text","completed","slice","index","Object","assign","todoApp"],"mappings":";;;;;;AAAA;;AACA;;;;IACQA,Q,6BAAAA,Q;;;AAER,SAASC,gBAAT,GAAoD;AAAA,MAA1BC,KAA0B,uEAAlBF,QAAkB;AAAA,MAARG,MAAQ;;AAClD,UAAQA,OAAOC,IAAf;AACE;AACE,aAAOD,OAAOE,MAAd;AACF;AACE,aAAOH,KAAP;AAJJ;AAMD;;AAED,SAASI,KAAT,GAAmC;AAAA,MAApBJ,KAAoB,uEAAZ,EAAY;AAAA,MAARC,MAAQ;;AACjC,UAAQA,OAAOC,IAAf;AACE;AACE,0CACKF,KADL,IAEE;AACEK,cAAMJ,OAAOI,IADf;AAEEC,mBAAW;AAFb,OAFF;AAOF;AACA;AACE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACM,0CACKN,MAAMO,KAAN,CAAY,CAAZ,EAAeN,OAAOO,KAAtB,CADL,IAEEC,OAAOC,MAAP,CAAc,EAAd,EAAkBV,MAAMC,OAAOO,KAAb,CAAlB,EAAuC;AACrCF,mBAAW;AAD0B,OAAvC,CAFF,sBAKKN,MAAMO,KAAN,CAAYN,OAAOO,KAAP,GAAe,CAA3B,CALL;AAON;AACA;AACE,aAAOR,KAAP;AA9BJ;AAgCD;;AAED,IAAMW,UAAU,4BAAgB;AAC9BZ,oCAD8B;AAE9BK;AAF8B,CAAhB,CAAhB;;kBAKeO,O","file":"reducer.jsx","sourceRoot":"/Users/creator/workspace/furuida","sourcesContent":["import { combineReducers } from 'redux'\nimport { ADD_TODO, COMPLETE_TODO, SET_VISIBILITY_FILTER, VisibilityFilters } from './action'\nconst { SHOW_ALL } = VisibilityFilters\n\nfunction visibilityFilter(state = SHOW_ALL, action) {\n  switch (action.type) {\n    case SET_VISIBILITY_FILTER:\n      return action.filter\n    default:\n      return state\n  }\n}\n\nfunction todos(state = [], action) {\n  switch (action.type) {\n    case ADD_TODO:\n      return [\n        ...state,\n        {\n          text: action.text,\n          completed: false\n        }\n      ]\n    case COMPLETE_TODO:\n    //   console.log(action);\n      //\n    //   if(!!state[action.index] && state[action.index].completed){\n    //       return [\n    //           ...state.slice(0, action.index),\n    //           Object.assign({}, state[action.index], {\n    //             completed: false\n    //           }),\n    //           ...state.slice(action.index + 1)\n    //       ]\n    //   } else {\n          return [\n            ...state.slice(0, action.index),\n            Object.assign({}, state[action.index], {\n              completed: true\n            }),\n            ...state.slice(action.index + 1)\n          ]\n    //   }  \n    default:\n      return state\n  }\n}\n\nconst todoApp = combineReducers({\n  visibilityFilter,\n  todos\n})\n\nexport default todoApp\n"]}