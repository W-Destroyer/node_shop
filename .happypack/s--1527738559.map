{"version":3,"sources":["public/src/js_components/react-router/modules/withRouter.js"],"names":["withRouter","getDisplayName","WrappedComponent","displayName","name","options","withRef","WithRouter","createClass","mixins","contextTypes","router","propTypes","getWrappedInstance","wrappedInstance","render","props","context","params","location","routes","ref","c"],"mappings":";;;;;;kBAUwBA,U;;AAVxB;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;AAEA,SAASC,cAAT,CAAwBC,gBAAxB,EAA0C;AACxC,SAAOA,iBAAiBC,WAAjB,IAAgCD,iBAAiBE,IAAjD,IAAyD,WAAhE;AACD;;AAEc,SAASJ,UAAT,CAAoBE,gBAApB,EAAsCG,OAAtC,EAA+C;AAC5D,MAAMC,UAAUD,WAAWA,QAAQC,OAAnC;;AAEA,MAAMC,aAAa,gBAAMC,WAAN,CAAkB;AAAA;;AACnCC,YAAQ,CAAE,qCAAkB,QAAlB,CAAF,CAD2B;;AAGnCC,kBAAc,EAAEC,8BAAF,EAHqB;AAInCC,eAAW,EAAED,8BAAF,EAJwB;;AAMnCE,sBANmC,gCAMd;AACnB,OACEP,OADF,2EAEE,yDACA,sEAHF;;AAMA,aAAO,KAAKQ,eAAZ;AACD,KAdkC;AAgBnCC,UAhBmC,oBAgB1B;AAAA;;AACP,UAAMJ,SAAS,KAAKK,KAAL,CAAWL,MAAX,IAAqB,KAAKM,OAAL,CAAaN,MAAjD;AACA,UAAI,CAACA,MAAL,EAAa;AACX,eAAO,8BAAC,gBAAD,EAAsB,KAAKK,KAA3B,CAAP;AACD;;AAJM,UAMCE,MAND,GAM8BP,MAN9B,CAMCO,MAND;AAAA,UAMSC,QANT,GAM8BR,MAN9B,CAMSQ,QANT;AAAA,UAMmBC,MANnB,GAM8BT,MAN9B,CAMmBS,MANnB;;AAOP,UAAMJ,qBAAa,KAAKA,KAAlB,IAAyBL,cAAzB,EAAiCO,cAAjC,EAAyCC,kBAAzC,EAAmDC,cAAnD,GAAN;;AAEA,UAAId,OAAJ,EAAa;AACXU,cAAMK,GAAN,GAAY,UAACC,CAAD,EAAO;AAAE,gBAAKR,eAAL,GAAuBQ,CAAvB;AAA0B,SAA/C;AACD;;AAED,aAAO,8BAAC,gBAAD,EAAsBN,KAAtB,CAAP;AACD;AA9BkC,GAAlB,CAAnB;;AAiCAT,aAAWJ,WAAX,mBAAuCF,eAAeC,gBAAf,CAAvC;AACAK,aAAWL,gBAAX,GAA8BA,gBAA9B;;AAEA,SAAO,oCAAaK,UAAb,EAAyBL,gBAAzB,CAAP;AACD","file":"withRouter.js","sourceRoot":"/Users/creator/workspace/furuida","sourcesContent":["import invariant from 'invariant'\nimport React from 'react'\nimport hoistStatics from 'hoist-non-react-statics'\nimport { ContextSubscriber } from './ContextUtils'\nimport { routerShape } from './PropTypes'\n\nfunction getDisplayName(WrappedComponent) {\n  return WrappedComponent.displayName || WrappedComponent.name || 'Component'\n}\n\nexport default function withRouter(WrappedComponent, options) {\n  const withRef = options && options.withRef\n\n  const WithRouter = React.createClass({\n    mixins: [ ContextSubscriber('router') ],\n\n    contextTypes: { router: routerShape },\n    propTypes: { router: routerShape },\n\n    getWrappedInstance() {\n      invariant(\n        withRef,\n        'To access the wrapped instance, you need to specify ' +\n        '`{ withRef: true }` as the second argument of the withRouter() call.'\n      )\n\n      return this.wrappedInstance\n    },\n\n    render() {\n      const router = this.props.router || this.context.router\n      if (!router) {\n        return <WrappedComponent {...this.props} />\n      }\n\n      const { params, location, routes } = router\n      const props = { ...this.props, router, params, location, routes }\n\n      if (withRef) {\n        props.ref = (c) => { this.wrappedInstance = c }\n      }\n\n      return <WrappedComponent {...props} />\n    }\n  })\n\n  WithRouter.displayName = `withRouter(${getDisplayName(WrappedComponent)})`\n  WithRouter.WrappedComponent = WrappedComponent\n\n  return hoistStatics(WithRouter, WrappedComponent)\n}\n"]}