"use strict";

define(["react", "react-dom"], function (React, ReactDOM) {
    function render() {
        // tutorial1.js
        var CommentBox = React.createClass({
            displayName: "CommentBox",

            loadCommentsFromServer: function loadCommentsFromServer() {
                var _this = this;

                $.get(this.props.url).done(function (data) {
                    _this.setState({ data: data.data });
                }).fail(function (err) {
                    console.error(_this.props.url, err.toString());
                });
            },
            handlerCommentSubmit: function handlerCommentSubmit(comment, callback) {
                var _this2 = this;

                var comments = this.state.data;
                comment.id = Date.now();
                var newComments = comments.concat([comment]);
                this.setState({ data: newComments });

                $.post(this.props.url, {
                    data: JSON.stringify(comment)
                }).done(function (data) {
                    _this2.setState({ data: data.data });
                    callback();
                }).fail(function (err) {
                    _this2.setState({ data: comments });
                });
            },
            getInitialState: function getInitialState() {
                return { data: [] };
            },
            componentDidMount: function componentDidMount() {
                this.loadCommentsFromServer();
                // setTimeout(this.loadCommentsFromServer, this.props.pollTnterval);
            },
            render: function render() {
                return React.createElement(
                    "div",
                    { className: "comment-box" },
                    React.createElement(
                        "h1",
                        null,
                        "Comments"
                    ),
                    React.createElement(CommentList, { data: this.state.data }),
                    React.createElement(CommentForm, { onCommentSubmit: this.handlerCommentSubmit })
                );
            }
        });
        // tutorial2.js
        var CommentList = React.createClass({
            displayName: "CommentList",

            render: function render() {
                var commentNodes = this.props.data.map(function (comment) {
                    return React.createElement(
                        Comment,
                        { author: comment.author, key: comment.id },
                        comment.text
                    );
                });
                return React.createElement(
                    "div",
                    { className: "comment-list" },
                    commentNodes
                );
            }
        });
        var CommentForm = React.createClass({
            displayName: "CommentForm",

            getInitialState: function getInitialState() {
                return { author: "", text: "" };
            },
            handlerAuthorChange: function handlerAuthorChange(e) {
                this.setState({ author: e.target.value });
            },
            handlerTextChange: function handlerTextChange(e) {
                this.setState({ text: e.target.value });
            },
            handlerSubmit: function handlerSubmit() {
                var _this3 = this;

                var author = this.state.author.trim();
                var text = this.state.text.trim();
                if (!author || !text) {
                    return;
                }
                this.props.onCommentSubmit({ author: author, text: text }, function () {
                    _this3.setState({ author: "", text: "" });
                });
            },
            render: function render() {
                return React.createElement(
                    "div",
                    { className: "comment-form" },
                    React.createElement("input", { type: "text", placeholder: "Your name", value: this.state.author, onChange: this.handlerAuthorChange }),
                    React.createElement("input", { type: "text", placeholder: "Say something...", value: this.state.text, onChange: this.handlerTextChange }),
                    React.createElement(
                        "button",
                        { onClick: this.handlerSubmit },
                        "\u63D0\u4EA4"
                    )
                );
            }
        });
        var Comment = React.createClass({
            displayName: "Comment",

            render: function render() {
                // var md = new Remarkable();
                return React.createElement(
                    "div",
                    { className: "comment" },
                    React.createElement(
                        "h2",
                        { className: "commentAuthor" },
                        this.props.author
                    ),
                    this.props.children
                );
            }
        });
        ReactDOM.render(React.createElement(CommentBox, { url: "/api/comments", pollTnterval: 2000 }), // data={data}
        $('div')[0]);
    }
    return render;
});