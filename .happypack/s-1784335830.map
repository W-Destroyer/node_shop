{"version":3,"sources":["node_modules/react-router-redux/src/middleware.js"],"names":["routerMiddleware","history","action","type","next","payload","method","args"],"mappings":";;;;;kBAOwBA,gB;;AAPxB;;;;AAEA;;;;;AAKe,SAASA,gBAAT,CAA0BC,OAA1B,EAAmC;AAChD,SAAO;AAAA,WAAM;AAAA,aAAQ,kBAAU;AAC7B,YAAIC,OAAOC,IAAP,iCAAJ,EAAyC;AACvC,iBAAOC,KAAKF,MAAL,CAAP;AACD;;AAH4B,8BAKSA,MALT,CAKrBG,OALqB;AAAA,YAKVC,MALU,mBAKVA,MALU;AAAA,YAKFC,IALE,mBAKFA,IALE;;AAM7BN,gBAAQK,MAAR,oCAAmBC,IAAnB;AACD,OAPY;AAAA,KAAN;AAAA,GAAP;AAQD","file":"middleware.js","sourceRoot":"/Users/creator/workspace/furuida","sourcesContent":["import { CALL_HISTORY_METHOD } from './actions'\n\n/**\n * This middleware captures CALL_HISTORY_METHOD actions to redirect to the\n * provided history object. This will prevent these actions from reaching your\n * reducer or any middleware that comes after this one.\n */\nexport default function routerMiddleware(history) {\n  return () => next => action => {\n    if (action.type !== CALL_HISTORY_METHOD) {\n      return next(action)\n    }\n\n    const { payload: { method, args } } = action\n    history[method](...args)\n  }\n}\n"]}