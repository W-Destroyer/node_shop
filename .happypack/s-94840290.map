{"version":3,"sources":["public/src/js_components/react-router/modules/getComponents.js"],"names":["getComponentsForRoute","nextState","route","callback","component","components","getComponent","getComponents","componentReturn","call","then","routes","index"],"mappings":";;;;AAAA;;AACA;;AAEA,SAASA,qBAAT,CAA+BC,SAA/B,EAA0CC,KAA1C,EAAiDC,QAAjD,EAA2D;AACzD,MAAID,MAAME,SAAN,IAAmBF,MAAMG,UAA7B,EAAyC;AACvCF,aAAS,IAAT,EAAeD,MAAME,SAAN,IAAmBF,MAAMG,UAAxC;AACA;AACD;;AAED,MAAMC,eAAeJ,MAAMI,YAAN,IAAsBJ,MAAMK,aAAjD;AACA,MAAID,YAAJ,EAAkB;AAChB,QAAME,kBAAkBF,aAAaG,IAAb,CAAkBP,KAAlB,EAAyBD,SAAzB,EAAoCE,QAApC,CAAxB;AACA,QAAI,6BAAUK,eAAV,CAAJ,EACEA,gBACGE,IADH,CAEI;AAAA,aAAaP,SAAS,IAAT,EAAeC,SAAf,CAAb;AAAA,KAFJ,EAGID,QAHJ;AAKH,GARD,MAQO;AACLA;AACD;AACF;;AAED;;;;;;;AAOA,SAASI,aAAT,CAAuBN,SAAvB,EAAkCE,QAAlC,EAA4C;AAC1C,4BAASF,UAAUU,MAAnB,EAA2B,UAAUT,KAAV,EAAiBU,KAAjB,EAAwBT,QAAxB,EAAkC;AAC3DH,0BAAsBC,SAAtB,EAAiCC,KAAjC,EAAwCC,QAAxC;AACD,GAFD,EAEGA,QAFH;AAGD;;kBAEcI,a","file":"getComponents.js","sourceRoot":"/Users/creator/workspace/furuida","sourcesContent":["import { mapAsync } from './AsyncUtils'\nimport { isPromise } from './PromiseUtils'\n\nfunction getComponentsForRoute(nextState, route, callback) {\n  if (route.component || route.components) {\n    callback(null, route.component || route.components)\n    return\n  }\n\n  const getComponent = route.getComponent || route.getComponents\n  if (getComponent) {\n    const componentReturn = getComponent.call(route, nextState, callback)\n    if (isPromise(componentReturn))\n      componentReturn\n        .then(\n          component => callback(null, component),\n          callback\n        )\n  } else {\n    callback()\n  }\n}\n\n/**\n * Asynchronously fetches all components needed for the given router\n * state and calls callback(error, components) when finished.\n *\n * Note: This operation may finish synchronously if no routes have an\n * asynchronous getComponents method.\n */\nfunction getComponents(nextState, callback) {\n  mapAsync(nextState.routes, function (route, index, callback) {\n    getComponentsForRoute(nextState, route, callback)\n  }, callback)\n}\n\nexport default getComponents\n"]}