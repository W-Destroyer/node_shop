{"version":3,"sources":["node_modules/shallowequal/modules/index.js"],"names":["fetchKeys","require","module","exports","shallowEqual","objA","objB","compare","compareContext","ret","call","keysA","keysB","len","length","bHasOwnProperty","Object","prototype","hasOwnProperty","bind","i","key","valueA","valueB","_ret"],"mappings":"AAAA;;;;AAEA,IAAIA,YAAYC,QAAQ,aAAR,CAAhB;;AAEAC,OAAOC,OAAP,GAAiB,SAASC,YAAT,CAAsBC,IAAtB,EAA4BC,IAA5B,EAAkCC,OAAlC,EAA2CC,cAA3C,EAA2D;;AAExE,QAAIC,MAAMF,UAAUA,QAAQG,IAAR,CAAaF,cAAb,EAA6BH,IAA7B,EAAmCC,IAAnC,CAAV,GAAqD,KAAK,CAApE;;AAEA,QAAIG,QAAQ,KAAK,CAAjB,EAAoB;AAChB,eAAO,CAAC,CAACA,GAAT;AACH;;AAED,QAAIJ,SAASC,IAAb,EAAmB;AACf,eAAO,IAAP;AACH;;AAED,QAAI,QAAOD,IAAP,yCAAOA,IAAP,OAAgB,QAAhB,IAA4BA,SAAS,IAArC,IAA6C,QAAOC,IAAP,yCAAOA,IAAP,OAAgB,QAA7D,IAAyEA,SAAS,IAAtF,EAA4F;AACxF,eAAO,KAAP;AACH;;AAED,QAAIK,QAAQX,UAAUK,IAAV,CAAZ;AACA,QAAIO,QAAQZ,UAAUM,IAAV,CAAZ;;AAEA,QAAIO,MAAMF,MAAMG,MAAhB;AACA,QAAID,QAAQD,MAAME,MAAlB,EAA0B;AACtB,eAAO,KAAP;AACH;;AAEDN,qBAAiBA,kBAAkB,IAAnC;;AAEA;AACA,QAAIO,kBAAkBC,OAAOC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCb,IAArC,CAAtB;AACA,SAAK,IAAIc,IAAI,CAAb,EAAgBA,IAAIP,GAApB,EAAyBO,GAAzB,EAA8B;AAC1B,YAAIC,MAAMV,MAAMS,CAAN,CAAV;AACA,YAAI,CAACL,gBAAgBM,GAAhB,CAAL,EAA2B;AACvB,mBAAO,KAAP;AACH;AACD,YAAIC,SAASjB,KAAKgB,GAAL,CAAb;AACA,YAAIE,SAASjB,KAAKe,GAAL,CAAb;;AAEA,YAAIG,OAAOjB,UAAUA,QAAQG,IAAR,CAAaF,cAAb,EAA6Bc,MAA7B,EAAqCC,MAArC,EAA6CF,GAA7C,CAAV,GAA8D,KAAK,CAA9E;AACA,YAAIG,SAAS,KAAT,IAAkBA,SAAS,KAAK,CAAd,IAAmBF,WAAWC,MAApD,EAA4D;AACxD,mBAAO,KAAP;AACH;AACJ;;AAED,WAAO,IAAP;AACH,CA3CD","file":"index.js","sourceRoot":"/Users/creator/workspace/furuida","sourcesContent":["'use strict';\n\nvar fetchKeys = require('lodash.keys');\n\nmodule.exports = function shallowEqual(objA, objB, compare, compareContext) {\n\n    var ret = compare ? compare.call(compareContext, objA, objB) : void 0;\n\n    if (ret !== void 0) {\n        return !!ret;\n    }\n\n    if (objA === objB) {\n        return true;\n    }\n\n    if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {\n        return false;\n    }\n\n    var keysA = fetchKeys(objA);\n    var keysB = fetchKeys(objB);\n\n    var len = keysA.length;\n    if (len !== keysB.length) {\n        return false;\n    }\n\n    compareContext = compareContext || null;\n\n    // Test for A's keys different from B.\n    var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB);\n    for (var i = 0; i < len; i++) {\n        var key = keysA[i];\n        if (!bHasOwnProperty(key)) {\n            return false;\n        }\n        var valueA = objA[key];\n        var valueB = objB[key];\n\n        var _ret = compare ? compare.call(compareContext, valueA, valueB, key) : void 0;\n        if (_ret === false || _ret === void 0 && valueA !== valueB) {\n            return false;\n        }\n    }\n\n    return true;\n};"]}