'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _radio = require('antd/lib/radio');

var _radio2 = _interopRequireDefault(_radio);

var _reactRouter = require('react-router');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
// import 'antd/radio/style'

// const RadioGroup = Radio.RadioGroup;

var List = function (_React$Component) {
    _inherits(List, _React$Component);

    function List() {
        _classCallCheck(this, List);

        var _this = _possibleConstructorReturn(this, (List.__proto__ || Object.getPrototypeOf(List)).call(this));

        _this.state = {
            value: '1'
        };

        _this.onChange = function (e) {
            console.log('radio checked', e.target.value);
            _this.setState({
                value: e.target.value
            });
        };

        return _this;
    }

    _createClass(List, [{
        key: 'render',
        value: function render() {
            var radioStyle = {
                display: 'block',
                height: '30px',
                lineHeight: '30px',
                color: 'red'
            };
            return _react2.default.createElement(
                _radio.Group,
                { key: 'radioGroup', onChange: this.onChange, value: this.state.value },
                _react2.default.createElement(
                    _radio2.default,
                    { style: radioStyle, value: '1' },
                    '\u5217\u8868\u4E00'
                ),
                _react2.default.createElement(
                    _radio2.default,
                    { style: radioStyle, value: '2' },
                    '\u5217\u8868\u4E8C'
                ),
                _react2.default.createElement(
                    _radio2.default,
                    { style: radioStyle, value: '3' },
                    '\u5217\u8868\u4E09'
                ),
                _react2.default.createElement(
                    _radio2.default,
                    { style: radioStyle, value: '4' },
                    '\u5217\u8868\u56DB'
                ),
                _react2.default.createElement(
                    _radio2.default,
                    { style: radioStyle, value: '5' },
                    '\u5217\u8868\u4E94'
                )
            );
        }
    }]);

    return List;
}(_react2.default.Component);

exports.default = List;