{"version":3,"sources":["public/src/js_components/react-router/modules/Link.js"],"names":["PropTypes","bool","object","string","func","oneOfType","isLeftClickEvent","event","button","isModifiedEvent","metaKey","altKey","ctrlKey","shiftKey","isEmptyObject","p","Object","prototype","hasOwnProperty","call","resolveToLocation","to","router","location","Link","createClass","mixins","contextTypes","propTypes","query","hash","state","activeStyle","activeClassName","onlyActiveOnIndex","isRequired","onClick","target","getDefaultProps","style","handleClick","props","defaultPrevented","context","preventDefault","push","render","toLocation","href","createHref","isActive","className"],"mappings":"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","file":"Link.js","sourceRoot":"/Users/creator/workspace/furuida","sourcesContent":["import React from 'react'\nimport invariant from 'invariant'\nimport { routerShape } from './PropTypes'\nimport { ContextSubscriber } from './ContextUtils'\n\nconst { bool, object, string, func, oneOfType } = React.PropTypes\n\nfunction isLeftClickEvent(event) {\n  return event.button === 0\n}\n\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey)\n}\n\n// TODO: De-duplicate against hasAnyProperties in createTransitionManager.\nfunction isEmptyObject(object) {\n  for (const p in object)\n    if (Object.prototype.hasOwnProperty.call(object, p))\n      return false\n\n  return true\n}\n\nfunction resolveToLocation(to, router) {\n  return typeof to === 'function' ? to(router.location) : to\n}\n\n/**\n * A <Link> is used to create an <a> element that links to a route.\n * When that route is active, the link gets the value of its\n * activeClassName prop.\n *\n * For example, assuming you have the following route:\n *\n *   <Route path=\"/posts/:postID\" component={Post} />\n *\n * You could use the following component to link to that route:\n *\n *   <Link to={`/posts/${post.id}`} />\n *\n * Links may pass along location state and/or query string parameters\n * in the state/query props, respectively.\n *\n *   <Link ... query={{ show: true }} state={{ the: 'state' }} />\n */\nconst Link = React.createClass({\n\n  mixins: [ ContextSubscriber('router') ],\n\n  contextTypes: {\n    router: routerShape\n  },\n\n  propTypes: {\n    to: oneOfType([ string, object, func ]),\n    query: object,\n    hash: string,\n    state: object,\n    activeStyle: object,\n    activeClassName: string,\n    onlyActiveOnIndex: bool.isRequired,\n    onClick: func,\n    target: string\n  },\n\n  getDefaultProps() {\n    return {\n      onlyActiveOnIndex: false,\n      style: {}\n    }\n  },\n\n  handleClick(event) {\n    if (this.props.onClick)\n      this.props.onClick(event)\n\n    if (event.defaultPrevented)\n      return\n\n    const { router } = this.context\n    invariant(\n      router,\n      '<Link>s rendered outside of a router context cannot navigate.'\n    )\n\n    if (isModifiedEvent(event) || !isLeftClickEvent(event))\n      return\n\n    // If target prop is set (e.g. to \"_blank\"), let browser handle link.\n    /* istanbul ignore if: untestable with Karma */\n    if (this.props.target)\n      return\n\n    event.preventDefault()\n\n    router.push(resolveToLocation(this.props.to, router))\n  },\n\n  render() {\n    const { to, activeClassName, activeStyle, onlyActiveOnIndex, ...props } = this.props\n\n    // Ignore if rendered outside the context of router to simplify unit testing.\n    const { router } = this.context\n\n    if (router) {\n      // If user does not specify a `to` prop, return an empty anchor tag.\n      if (!to) { return <a {...props} /> }\n\n      const toLocation = resolveToLocation(to, router)\n      props.href = router.createHref(toLocation)\n\n      if (activeClassName || (activeStyle != null && !isEmptyObject(activeStyle))) {\n        if (router.isActive(toLocation, onlyActiveOnIndex)) {\n          if (activeClassName) {\n            if (props.className) {\n              props.className += ` ${activeClassName}`\n            } else {\n              props.className = activeClassName\n            }\n          }\n\n          if (activeStyle)\n            props.style = { ...props.style, ...activeStyle }\n        }\n      }\n    }\n\n    return <a {...props} onClick={this.handleClick} />\n  }\n\n})\n\nexport default Link\n"]}