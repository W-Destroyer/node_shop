{"version":3,"sources":["public/src/js_components/react-router/modules/ContextUtils.js"],"names":["ContextProvider","ContextSubscriber","contextProviderShape","shape","subscribe","func","isRequired","eventIndex","number","makeContextName","name","contextName","listenersKey","eventIndexKey","subscribeKey","childContextTypes","getChildContext","componentWillMount","componentWillReceiveProps","componentDidUpdate","forEach","listener","push","filter","item","lastRenderedEventIndexKey","handleContextUpdateKey","unsubscribeKey","contextTypes","getInitialState","context","componentDidMount","setState","componentWillUnmount","state"],"mappings":"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","file":"ContextUtils.js","sourceRoot":"/Users/creator/workspace/furuida","sourcesContent":["import { PropTypes } from 'react'\n\n// Works around issues with context updates failing to propagate.\n// Caveat: the context value is expected to never change its identity.\n// https://github.com/facebook/react/issues/2517\n// https://github.com/reactjs/react-router/issues/470\n\nconst contextProviderShape = PropTypes.shape({\n  subscribe: PropTypes.func.isRequired,\n  eventIndex: PropTypes.number.isRequired\n})\n\nfunction makeContextName(name) {\n  return `@@contextSubscriber/${name}`\n}\n\nexport function ContextProvider(name) {\n  const contextName = makeContextName(name)\n  const listenersKey = `${contextName}/listeners`\n  const eventIndexKey = `${contextName}/eventIndex`\n  const subscribeKey = `${contextName}/subscribe`\n\n  return {\n    childContextTypes: {\n      [contextName]: contextProviderShape.isRequired\n    },\n\n    getChildContext() {\n      return {\n        [contextName]: {\n          eventIndex: this[eventIndexKey],\n          subscribe: this[subscribeKey]\n        }\n      }\n    },\n\n    componentWillMount() {\n      this[listenersKey] = []\n      this[eventIndexKey] = 0\n    },\n\n    componentWillReceiveProps() {\n      this[eventIndexKey]++\n    },\n\n    componentDidUpdate() {\n      this[listenersKey].forEach(listener =>\n        listener(this[eventIndexKey])\n      )\n    },\n\n    [subscribeKey](listener) {\n      // No need to immediately call listener here.\n      this[listenersKey].push(listener)\n\n      return () => {\n        this[listenersKey] = this[listenersKey].filter(item =>\n          item !== listener\n        )\n      }\n    }\n  }\n}\n\nexport function ContextSubscriber(name) {\n  const contextName = makeContextName(name)\n  const lastRenderedEventIndexKey = `${contextName}/lastRenderedEventIndex`\n  const handleContextUpdateKey = `${contextName}/handleContextUpdate`\n  const unsubscribeKey = `${contextName}/unsubscribe`\n\n  return {\n    contextTypes: {\n      [contextName]: contextProviderShape\n    },\n\n    getInitialState() {\n      if (!this.context[contextName]) {\n        return {}\n      }\n\n      return {\n        [lastRenderedEventIndexKey]: this.context[contextName].eventIndex\n      }\n    },\n\n    componentDidMount() {\n      if (!this.context[contextName]) {\n        return\n      }\n\n      this[unsubscribeKey] = this.context[contextName].subscribe(\n        this[handleContextUpdateKey]\n      )\n    },\n\n    componentWillReceiveProps() {\n      if (!this.context[contextName]) {\n        return\n      }\n\n      this.setState({\n        [lastRenderedEventIndexKey]: this.context[contextName].eventIndex\n      })\n    },\n\n    componentWillUnmount() {\n      if (!this[unsubscribeKey]) {\n        return\n      }\n\n      this[unsubscribeKey]()\n      this[unsubscribeKey] = null\n    },\n\n    [handleContextUpdateKey](eventIndex) {\n      if (eventIndex !== this.state[lastRenderedEventIndexKey]) {\n        this.setState({ [lastRenderedEventIndexKey]: eventIndex })\n      }\n    }\n  }\n}\n"]}