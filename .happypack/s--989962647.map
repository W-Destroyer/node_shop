{"version":3,"sources":["public/src/js/index/home.jsx"],"names":["define","React","ReactDOM","render","CommentBox","createClass","loadCommentsFromServer","$","get","props","url","done","data","setState","fail","err","console","error","toString","handlerCommentSubmit","comment","callback","comments","state","id","Date","now","newComments","concat","post","JSON","stringify","getInitialState","componentDidMount","CommentList","commentNodes","map","author","text","CommentForm","handlerAuthorChange","e","target","value","handlerTextChange","handlerSubmit","trim","onCommentSubmit","Comment","children"],"mappings":"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","file":"home.jsx","sourceRoot":"/Users/creator/workspace/furuida","sourcesContent":["define([\n    \"react\", \"react-dom\"\n], function(React, ReactDOM) {\n    function render() {\n        // tutorial1.js\n        var CommentBox = React.createClass({\n            loadCommentsFromServer: function() {\n                $.get(this.props.url).done((data) => {\n                    this.setState({data: data.data});\n                }).fail((err) => {\n                    console.error(this.props.url, err.toString());\n                })\n            },\n            handlerCommentSubmit: function(comment, callback) {\n                var comments = this.state.data;\n                comment.id = Date.now();\n                var newComments = comments.concat([comment]);\n                this.setState({data: newComments});\n                \n                $.post(this.props.url, {\n                    data: JSON.stringify(comment)\n                }).done((data) => {\n                    this.setState({data: data.data});\n                    callback();\n                }).fail((err) => {\n                    this.setState({data: comments});\n                })\n            },\n            getInitialState: function() {\n                return {data: []};\n            },\n            componentDidMount: function() {\n                this.loadCommentsFromServer();\n                // setTimeout(this.loadCommentsFromServer, this.props.pollTnterval);\n            },\n            render: function() {\n                return (\n                    <div className=\"comment-box\">\n                        <h1>Comments</h1>\n                        <CommentList data={this.state.data}/>\n                        <CommentForm onCommentSubmit={this.handlerCommentSubmit}/>\n                    </div>\n                );\n            }\n        });\n        // tutorial2.js\n        var CommentList = React.createClass({\n            render: function() {\n                var commentNodes = this.props.data.map((comment) => {\n                    return (\n                        <Comment author={comment.author} key={comment.id}>\n                            {comment.text}\n                        </Comment>\n                    )\n                })\n                return (\n                    <div className=\"comment-list\">\n                        {commentNodes}\n                    </div>\n                );\n            }\n        });\n        var CommentForm = React.createClass({\n            getInitialState: function() {\n                return {author: \"\", text: \"\"};\n            },\n            handlerAuthorChange: function(e) {\n                this.setState({author: e.target.value});\n            },\n            handlerTextChange: function(e) {\n                this.setState({text: e.target.value});\n            },\n            handlerSubmit: function(){\n                var author = this.state.author.trim();\n                var text = this.state.text.trim();\n                if(!author || !text){\n                    return;\n                }\n                this.props.onCommentSubmit({author: author, text: text}, () => {\n                    this.setState({author: \"\", text: \"\"});\n                });\n            },\n            render : function() {\n                return (\n                    <div className=\"comment-form\">\n                        <input type=\"text\" placeholder=\"Your name\" value={this.state.author} onChange={this.handlerAuthorChange}/>\n                        <input type=\"text\" placeholder=\"Say something...\" value={this.state.text} onChange={this.handlerTextChange}/>\n                        <button onClick={this.handlerSubmit}>提交</button>\n                    </div>\n                );\n            }\n        });\n        var Comment = React.createClass({\n            render: function() {\n                // var md = new Remarkable();\n                return (\n                    <div className=\"comment\">\n                        <h2 className=\"commentAuthor\">\n                            {this.props.author}\n                        </h2>\n                        {this.props.children}\n                    </div>\n                );\n            }\n        });\n        ReactDOM.render(\n            <CommentBox url=\"/api/comments\" pollTnterval={2000} />, // data={data}\n            $('div')[0]\n        );\n    }\n    return render\n})\n"]}